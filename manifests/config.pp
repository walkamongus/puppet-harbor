# @api private
# @summary Handles Harbor configuration files and running the migrator
class harbor::config (
  $cfg_version,
  $hostname,
  $ui_url_protocol,
  $max_job_workers,
  $logger_sweeper_duration,
  $customize_crt,
  $ssl_cert,
  $ssl_cert_key,
  $internal_tls,
  $internal_tls_dir,
  $secretkey_path,
  $external_url,
  $log_level,
  $log_rotate_count,
  $log_rotate_size,
  $log_location,
  $log_external_endpoint,
  $log_external_endpoint_protocol,
  $log_external_endpoint_host,
  $log_external_endpoint_port,
  $http_proxy,
  $https_proxy,
  $no_proxy,
  $data_volume,
  $harbor_admin_password,
  $db_host,
  $db_password,
  $db_port,
  $db_user,
  $db_max_idle_connections,
  $db_max_open_conns,
  $external_redis,
  $redis_host,
  $redis_port,
  $redis_password,
  $redis_registry_db_index,
  $redis_jobservice_db_index,
  $redis_trivy_db_index,
  $trivy_ignore_unfixed,
  $trivy_skip_update,
  $trivy_offline_scan,
  $trivy_insecure,
  $trivy_github_token,
  $uaa_ca_cert,
  $registry_storage_provider_name,
  $registry_storage_provider_config,
  $registry_custom_ca_bundle,
  $reload_config,
  $skip_reload_env_pattern,
  $webhook_job_max_retry,
  $metrics,
  $metrics_port,
  $metrics_path,
  $upload_purging_enabled,
  $upload_purging_age,
  $upload_purging_interval,
  $upload_purging_dryrun,
  $cache_enabled,
  $cache_expire_hours,
){

  assert_private()

  $_config = {
    'cfg_version'                      => $cfg_version,
    'hostname'                         => $hostname,
    'ui_url_protocol'                  => $ui_url_protocol,
    'max_job_workers'                  => $max_job_workers,
    'logger_sweeper_duration'          => $logger_sweeper_duration,
    'customize_crt'                    => $customize_crt,
    'ssl_cert'                         => $ssl_cert,
    'ssl_cert_key'                     => $ssl_cert_key,
    'internal_tls'                     => $internal_tls,
    'internal_tls_dir'                 => $internal_tls_dir,
    'secretkey_path'                   => $secretkey_path,
    'log_rotate_count'                 => $log_rotate_count,
    'log_rotate_size'                  => $log_rotate_size,
    'log_external_endpoint'            => $log_external_endpoint,
    'log_external_endpoint_protocol'   => $log_external_endpoint_protocol,
    'log_external_endpoint_host'       => $log_external_endpoint_host,
    'log_external_endpoint_port'       => $log_external_endpoint_port,
    'http_proxy'                       => $http_proxy,
    'https_proxy'                      => $https_proxy,
    'no_proxy'                         => $no_proxy,
    'harbor_admin_password'            => $harbor_admin_password,
    'db_host'                          => $db_host,
    'db_password'                      => $db_password,
    'db_port'                          => $db_port,
    'db_user'                          => $db_user,
    'redis_host'                       => $redis_host,
    'redis_port'                       => $redis_port,
    'redis_password'                   => $redis_password,
    'trivy_ignore_unfixed'             => $trivy_ignore_unfixed,
    'trivy_skip_update'                => $trivy_skip_update,
    'trivy_offline_scan'               => $trivy_offline_scan,
    'trivy_insecure'                   => $trivy_insecure,
    'trivy_github_token'               => $trivy_github_token,
    'uaa_ca_cert'                      => $uaa_ca_cert,
    'registry_storage_provider_name'   => $registry_storage_provider_name,
    'registry_storage_provider_config' => $registry_storage_provider_config,
    'registry_custom_ca_bundle'        => $registry_custom_ca_bundle,
    'reload_config'                    => $reload_config,
    'skip_reload_env_pattern'          => $skip_reload_env_pattern,
    'external_url'                     => $external_url,
    'log_level'                        => $log_level,
    'log_location'                     => $log_location,
    'data_volume'                      => $data_volume,
    'db_max_idle_connections'          => $db_max_idle_connections,
    'db_max_open_conns'                => $db_max_open_conns,
    'external_redis'                   => $external_redis,
    'redis_registry_db_index'          => $redis_registry_db_index,
    'redis_jobservice_db_index'        => $redis_jobservice_db_index,
    'redis_trivy_db_index'             => $redis_trivy_db_index,
    'webhook_job_max_retry'            => $webhook_job_max_retry,
    'metrics'                          => $metrics,
    'metrics_port'                     => $metrics_port,
    'metrics_path'                     => $metrics_path,
    'upload_purging_enabled'           => $upload_purging_enabled,
    'upload_purging_age'               => $upload_purging_age,
    'upload_purging_interval'          => $upload_purging_interval,
    'upload_purging_dryrun'            => $upload_purging_dryrun,
    'cache_enabled'                    => $cache_enabled,
    'cache_expire_hours'               => $cache_expire_hours,
  }

  file { '/opt/harbor/harbor.yml':
    ensure    => 'file',
    path      => "/opt/harbor-v${harbor::version}/harbor/harbor.yml",
    owner     => 'root',
    group     => 'root',
    mode      => '0644',
    content   => epp('harbor/harbor.yml.epp', $_config),
    show_diff => false,
  }

  $migrate_command = versioncmp($harbor::version, '2.0.0') < 0 ? {
    true    => "/usr/bin/docker run --rm -v harbor.yml:/harbor-migration/harbor-cfg/harbor.yml -v harbor.yml:/harbor-migration/harbor-cfg-out/harbor.yml goharbor/harbor-migrator:v${cfg_version} --cfg up",
    default => "/usr/bin/docker run --rm -v /:/hostfs goharbor/prepare:v${harbor::version} migrate -i /opt/harbor-v${harbor::version}/harbor/harbor.yml",
  }

  exec { 'migrate_cfg':
    cwd         => '/opt/harbor',
    command     => $migrate_command,
    environment => ['HOME=/root'],
    logoutput   => true,
    refreshonly => true,
  }
}
